(define (domain Pipes)

  (:predicates
   (red ?r ?c)
   (green ?r ?c)
   (blue ?r ?c)
   (yellow ?r ?c)  
   (pink ?r ?c)
   (next-r ?r ?r)
   (next-c ?c ?c)
  )

  (:action pink-up
    :parameters (?r ?c ?prev-r)
    :precondition (and (pink ?r ?c)
    			       (next-r ?prev-r ?r)
    			       (not (red ?prev-r ?c))
                       (not (green ?prev-r ?c))
                       (not (blue ?prev-r ?c))
                       (not (yellow ?prev-r ?c))
                )
    :effect (pink ?prev-r ?c)
  )

  (:action pink-down
    :parameters (?r ?c ?next-r)
    :precondition (and (pink ?r ?c)
    			       (next-r ?r ?next-r)
    			       (not (red ?next-r ?c))
                       (not (green ?next-r ?c))
                       (not (blue ?next-r ?c))
                       (not (yellow ?next-r ?c))
                )
    :effect (pink ?next-r ?c)
  )
  
  (:action pink-right
    :parameters (?r ?c ?next-c)
    :precondition (and (pink ?r ?c)
    			       (next-c ?c ?next-c)
    			       (not (red ?r ?next-c))
                       (not (green ?r ?next-c))
                       (not (blue ?r ?next-c))
                       (not (yellow ?r ?next-c))
                )
    :effect (pink ?r ?next-c)
  )  

  (:action pink-left
    :parameters (?r ?c ?prev-c)
    :precondition (and (pink ?r ?c)
    			       (next-c ?prev-c ?c)
    			       (not (red ?r ?prev-c))
                       (not (green ?r ?prev-c))
                       (not (blue ?r ?prev-c))
                       (not (yellow ?r ?prev-c))
                )
    :effect (pink ?r ?prev-c)
  )
  
  (:action red-up
    :parameters (?r ?c ?prev-r)
    :precondition (and (red ?r ?c)
    			       (next-r ?prev-r ?r)
                       (not (green ?prev-r ?c))
                       (not (blue ?prev-r ?c))
                       (not (yellow ?prev-r ?c))
                       (not (pink ?prev-r ?c))
                )
    :effect (red ?prev-r ?c)
  )

  (:action red-down
    :parameters (?r ?c ?next-r)
    :precondition (and (red ?r ?c)
    			       (next-r ?r ?next-r)
                       (not (green ?next-r ?c))
                       (not (blue ?next-r ?c))
                       (not (yellow ?next-r ?c))
                       (not (pink ?next-r ?c))
                )
    :effect (red ?next-r ?c)
  )
  
  (:action red-right
    :parameters (?r ?c ?next-c)
    :precondition (and (red ?r ?c)
    			       (next-c ?c ?next-c)
                       (not (green ?r ?next-c))
                       (not (blue ?r ?next-c))
                       (not (yellow ?r ?next-c))
                       (not (pink ?r ?next-c))
                )
    :effect (red ?r ?next-c)
  )  

  (:action red-left
    :parameters (?r ?c ?prev-c)
    :precondition (and (red ?r ?c)
    			       (next-c ?prev-c ?c)
                       (not (green ?r ?prev-c))
                       (not (blue ?r ?prev-c))
                       (not (yellow ?r ?prev-c))
                       (not (pink ?r ?prev-c))
                )
    :effect (red ?r ?prev-c)
  ) 
  
  (:action blue-up
    :parameters (?r ?c ?prev-r)
    :precondition (and (blue ?r ?c)
    			       (next-r ?prev-r ?r)
    			       (not (red ?prev-r ?c))
                       (not (green ?prev-r ?c))
                       (not (yellow ?prev-r ?c))
                       (not (pink ?prev-r ?c))
                )
    :effect (blue ?prev-r ?c)
  )  
  
  (:action blue-down
    :parameters (?r ?c ?next-r)
    :precondition (and (blue ?r ?c)
    			       (next-r ?r ?next-r)
                       (not (red ?next-r ?c))
                       (not (green ?next-r ?c))
                       (not (yellow ?next-r ?c))
                       (not (pink ?next-r ?c))
                )
    :effect (blue ?next-r ?c)
  )
  
  (:action blue-right
    :parameters (?r ?c ?next-c)
    :precondition (and (blue ?r ?c)
    			       (next-c ?c ?next-c)
                       (not (red ?r ?next-c))
                       (not (green ?r ?next-c))
                       (not (yellow ?r ?next-c))
                       (not (pink ?r ?next-c))
                )
    :effect (blue ?r ?next-c)
  )
  
  (:action blue-left
    :parameters (?r ?c ?prev-c)
    :precondition (and (blue ?r ?c)
    			       (next-c ?prev-c ?c)
                       (not (red ?r ?prev-c))
                       (not (green ?r ?prev-c))
                       (not (yellow ?r ?prev-c))
                       (not (pink ?r ?prev-c))
                )
    :effect (blue ?r ?prev-c)
  )
  
  (:action yellow-up
    :parameters (?r ?c ?prev-r)
    :precondition (and (yellow ?r ?c)
    			       (next-r ?prev-r ?r)
                       (not (red ?prev-r ?c))
                       (not (green ?prev-r ?c))
                       (not (blue ?prev-r ?c))
                       (not (pink ?prev-r ?c))
                )
    :effect (yellow ?prev-r ?c)
  )
  
  (:action yellow-down
    :parameters (?r ?c ?next-r)
    :precondition (and (yellow ?r ?c)
    			       (next-r ?r ?next-r)
                       (not (red ?next-r ?c))
                       (not (green ?next-r ?c))
                       (not (blue ?next-r ?c))
                       (not (pink ?next-r ?c))
                )
    :effect (yellow ?next-r ?c)
  )  
  
  (:action yellow-right
    :parameters (?r ?c ?next-c)
    :precondition (and (yellow ?r ?c)
    			       (next-c ?c ?next-c)
                       (not (red ?r ?next-c))
                       (not (green ?r ?next-c))
                       (not (blue ?r ?next-c))
                       (not (pink ?r ?next-c))
                )
    :effect (yellow ?r ?next-c)
  ) 
  
  (:action yellow-left
    :parameters (?r ?c ?prev-c)
    :precondition (and (yellow ?r ?c)
    			       (next-c ?prev-c ?c)
                       (not (red ?r ?prev-c))
                       (not (green ?r ?prev-c))
                       (not (blue ?r ?prev-c))
                       (not (pink ?r ?prev-c))
                )
    :effect (yellow ?r ?prev-c)
  )
  
  (:action green-up
    :parameters (?r ?c ?prev-r)
    :precondition (and (green ?r ?c)
    			       (next-r ?prev-r ?r)
                       (not (red ?prev-r ?c))
                       (not (blue ?prev-r ?c))
                       (not (yellow ?prev-r ?c))
                       (not (pink ?prev-r ?c))
                )
    :effect (green ?prev-r ?c)
  )
  
  (:action green-down
    :parameters (?r ?c ?next-r)
    :precondition (and (green ?r ?c)
    			       (next-r ?r ?next-r)
                       (not (red ?next-r ?c))
                       (not (blue ?next-r ?c))
                       (not (yellow ?next-r ?c))
                       (not (pink ?next-r ?c))
                )
    :effect (green ?next-r ?c)
  )
  
  (:action green-right
    :parameters (?r ?c ?next-c)
    :precondition (and (green ?r ?c)
    			       (next-c ?c ?next-c)
                       (not (red ?r ?next-c))
                       (not (blue ?r ?next-c))
                       (not (yellow ?r ?next-c))
                       (not (pink ?r ?next-c))
                )
    :effect (green ?r ?next-c)
  )
  
  (:action green-left
    :parameters (?r ?c ?prev-c)
    :precondition (and (green ?r ?c)
    			       (next-c ?prev-c ?c)
                       (not (red ?r ?prev-c))
                       (not (blue ?r ?prev-c))
                       (not (yellow ?r ?prev-c))
                       (not (pink ?r ?prev-c))
                )
    :effect (green ?r ?prev-c)
  )
)
